// <auto-generated>
// Code generated by Stored Procedures Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
#pragma warning disable 1591

namespace Foo
{
    using System;
    using System.Collections.Generic;
    using System.Data.Common;
    using System.Linq;

    partial class C
    {
        public partial async Task<IList<Foo.Item>> M(CancellationToken cancellationToken)
        {
            var connection = this.connection;
            using var command = connection.CreateCommand();

            var sqlQuery = @"sp_TestSP";
            command.CommandText = sqlQuery;
            using var reader = await command.ExecuteReaderAsync(cancellationToken).ConfigureAwait(false);
            var __result = new List<Item>();
            while (await reader.ReadAsync(cancellationToken).ConfigureAwait(false))
            {
                var item = new Item();
                var value_0 = reader.GetValue(0);
                item.StringValue = value_0 == DBNull.Value ? (string?)null : (string)value_0;
                var value_1 = reader.GetValue(1);
                item.Int32Value = (int)value_1;
                var value_2 = reader.GetValue(2);
                item.NullableInt32Value = value_2 == DBNull.Value ? (int?)null : (int)value_2;
                __result.Add(item);
            }

            await reader.CloseAsync().ConfigureAwait(false);
            return __result;
        }
    }
}