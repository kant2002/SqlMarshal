// -----------------------------------------------------------------------
// <copyright file="VisualBasicGenerator.cs" company="Andrii Kurdiumov">
// Copyright (c) Andrii Kurdiumov. All rights reserved.
// </copyright>
// -----------------------------------------------------------------------

namespace SqlMarshal;

using Microsoft.CodeAnalysis;

/// <summary>
/// Stored procedures generator for C#.
/// </summary>
[Generator(LanguageNames.VisualBasic)]
public class VisualBasicGenerator : AbstractGenerator
{
    private const string VisualBasicAttributeSource = @"' <auto-generated>
' Code generated by SqlMarshal Code Generator.
' Changes may cause incorrect behavior and will be lost if the code is
' regenerated.
' </auto-generated>

<System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple:=True)>
Friend NotInheritable Class SqlMarshalAttribute
    Inherits System.Attribute

    Public Sub New()
        StoredProcedureName = """"
    End Sub

    Public Sub New(name As String)
        StoredProcedureName = name
    End Sub

    Public Property StoredProcedureName As String
End Class

<System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple:=False)>
Friend NotInheritable Class RawSqlAttribute
    Inherits System.Attribute

    Public Sub New()
    End Sub
End Class

<System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple:=False)>
Friend NotInheritable Class RepositoryAttribute
    Inherits System.Attribute

    Public Sub New(entityType As System.Type)
        EntityType = entityType
    End Sub

    Public Property EntityType As System.Type
End Class

";

    /// <inheritdoc/>
    public override void Initialize(GeneratorInitializationContext context)
    {
        context.RegisterForPostInitialization((pi) =>
        {
            pi.AddSource("SqlMarshalAttribute.vb", VisualBasicAttributeSource);
        });
        context.RegisterForSyntaxNotifications(() => new SyntaxReceiver());
    }
}
